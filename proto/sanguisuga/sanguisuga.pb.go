// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: sanguisuga.proto

package sanguisuga

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Show struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	DiskPath string `protobuf:"bytes,2,opt,name=disk_path,json=diskPath,proto3" json:"disk_path,omitempty"`
	Quality  string `protobuf:"bytes,3,opt,name=quality,proto3" json:"quality,omitempty"`
}

func (x *Show) Reset() {
	*x = Show{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguisuga_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Show) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Show) ProtoMessage() {}

func (x *Show) ProtoReflect() protoreflect.Message {
	mi := &file_sanguisuga_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Show.ProtoReflect.Descriptor instead.
func (*Show) Descriptor() ([]byte, []int) {
	return file_sanguisuga_proto_rawDescGZIP(), []int{0}
}

func (x *Show) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Show) GetDiskPath() string {
	if x != nil {
		return x.DiskPath
	}
	return ""
}

func (x *Show) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

type Shows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shows []*Show `protobuf:"bytes,1,rep,name=shows,proto3" json:"shows,omitempty"`
}

func (x *Shows) Reset() {
	*x = Shows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguisuga_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shows) ProtoMessage() {}

func (x *Shows) ProtoReflect() protoreflect.Message {
	mi := &file_sanguisuga_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shows.ProtoReflect.Descriptor instead.
func (*Shows) Descriptor() ([]byte, []int) {
	return file_sanguisuga_proto_rawDescGZIP(), []int{1}
}

func (x *Shows) GetShows() []*Show {
	if x != nil {
		return x.Shows
	}
	return nil
}

type TVSnatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category  string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Freeleech bool   `protobuf:"varint,3,opt,name=freeleech,proto3" json:"freeleech,omitempty"`
	TorrentId string `protobuf:"bytes,4,opt,name=torrent_id,json=torrentId,proto3" json:"torrent_id,omitempty"`
}

func (x *TVSnatch) Reset() {
	*x = TVSnatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguisuga_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVSnatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVSnatch) ProtoMessage() {}

func (x *TVSnatch) ProtoReflect() protoreflect.Message {
	mi := &file_sanguisuga_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVSnatch.ProtoReflect.Descriptor instead.
func (*TVSnatch) Descriptor() ([]byte, []int) {
	return file_sanguisuga_proto_rawDescGZIP(), []int{2}
}

func (x *TVSnatch) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *TVSnatch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TVSnatch) GetFreeleech() bool {
	if x != nil {
		return x.Freeleech
	}
	return false
}

func (x *TVSnatch) GetTorrentId() string {
	if x != nil {
		return x.TorrentId
	}
	return ""
}

type TVSnatches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snatches []*TVSnatch `protobuf:"bytes,1,rep,name=snatches,proto3" json:"snatches,omitempty"`
}

func (x *TVSnatches) Reset() {
	*x = TVSnatches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguisuga_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVSnatches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVSnatches) ProtoMessage() {}

func (x *TVSnatches) ProtoReflect() protoreflect.Message {
	mi := &file_sanguisuga_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVSnatches.ProtoReflect.Descriptor instead.
func (*TVSnatches) Descriptor() ([]byte, []int) {
	return file_sanguisuga_proto_rawDescGZIP(), []int{3}
}

func (x *TVSnatches) GetSnatches() []*TVSnatch {
	if x != nil {
		return x.Snatches
	}
	return nil
}

type AnimeSnatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fname      string `protobuf:"bytes,1,opt,name=fname,proto3" json:"fname,omitempty"`
	ShowName   string `protobuf:"bytes,2,opt,name=show_name,json=showName,proto3" json:"show_name,omitempty"`
	Episode    string `protobuf:"bytes,3,opt,name=episode,proto3" json:"episode,omitempty"`
	Resolution string `protobuf:"bytes,4,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Crc32      string `protobuf:"bytes,5,opt,name=crc32,proto3" json:"crc32,omitempty"`
	BotName    string `protobuf:"bytes,6,opt,name=bot_name,json=botName,proto3" json:"bot_name,omitempty"`
	PackId     string `protobuf:"bytes,7,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
}

func (x *AnimeSnatch) Reset() {
	*x = AnimeSnatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguisuga_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeSnatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeSnatch) ProtoMessage() {}

func (x *AnimeSnatch) ProtoReflect() protoreflect.Message {
	mi := &file_sanguisuga_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeSnatch.ProtoReflect.Descriptor instead.
func (*AnimeSnatch) Descriptor() ([]byte, []int) {
	return file_sanguisuga_proto_rawDescGZIP(), []int{4}
}

func (x *AnimeSnatch) GetFname() string {
	if x != nil {
		return x.Fname
	}
	return ""
}

func (x *AnimeSnatch) GetShowName() string {
	if x != nil {
		return x.ShowName
	}
	return ""
}

func (x *AnimeSnatch) GetEpisode() string {
	if x != nil {
		return x.Episode
	}
	return ""
}

func (x *AnimeSnatch) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

func (x *AnimeSnatch) GetCrc32() string {
	if x != nil {
		return x.Crc32
	}
	return ""
}

func (x *AnimeSnatch) GetBotName() string {
	if x != nil {
		return x.BotName
	}
	return ""
}

func (x *AnimeSnatch) GetPackId() string {
	if x != nil {
		return x.PackId
	}
	return ""
}

type AnimeSnatches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snatches []*AnimeSnatch `protobuf:"bytes,1,rep,name=snatches,proto3" json:"snatches,omitempty"`
}

func (x *AnimeSnatches) Reset() {
	*x = AnimeSnatches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanguisuga_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeSnatches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeSnatches) ProtoMessage() {}

func (x *AnimeSnatches) ProtoReflect() protoreflect.Message {
	mi := &file_sanguisuga_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeSnatches.ProtoReflect.Descriptor instead.
func (*AnimeSnatches) Descriptor() ([]byte, []int) {
	return file_sanguisuga_proto_rawDescGZIP(), []int{5}
}

func (x *AnimeSnatches) GetSnatches() []*AnimeSnatch {
	if x != nil {
		return x.Snatches
	}
	return nil
}

var File_sanguisuga_proto protoreflect.FileDescriptor

var file_sanguisuga_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x61, 0x6e, 0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1b, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x2e, 0x78, 0x2e, 0x73, 0x61, 0x6e, 0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x04,
	0x53, 0x68, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69,
	0x73, 0x6b, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x22, 0x40, 0x0a, 0x05, 0x53, 0x68, 0x6f, 0x77, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x68,
	0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x69, 0x74, 0x68,
	0x69, 0x6e, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x78, 0x2e, 0x73, 0x61, 0x6e,
	0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x05, 0x73, 0x68,
	0x6f, 0x77, 0x73, 0x22, 0x77, 0x0a, 0x08, 0x54, 0x56, 0x53, 0x6e, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x65, 0x65, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x65, 0x65, 0x63, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0a,
	0x54, 0x56, 0x53, 0x6e, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x6e,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77,
	0x69, 0x74, 0x68, 0x69, 0x6e, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x78, 0x2e,
	0x73, 0x61, 0x6e, 0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x2e, 0x54, 0x56, 0x53, 0x6e, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0xc4, 0x01,
	0x0a, 0x0b, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x72,
	0x63, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x72, 0x63, 0x33, 0x32,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x63, 0x6b, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x0d, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x6e, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e,
	0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x78, 0x2e, 0x73, 0x61, 0x6e, 0x67, 0x75,
	0x69, 0x73, 0x75, 0x67, 0x61, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x32, 0xa7, 0x02, 0x0a, 0x02,
	0x54, 0x56, 0x12, 0x44, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x22, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x2e, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x78, 0x2e, 0x73, 0x61, 0x6e, 0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61,
	0x2e, 0x53, 0x68, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x12, 0x21, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x2e, 0x78, 0x2e, 0x73, 0x61, 0x6e, 0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x2e,
	0x53, 0x68, 0x6f, 0x77, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x07, 0x55, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x21, 0x2e, 0x77, 0x69, 0x74, 0x68,
	0x69, 0x6e, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x78, 0x2e, 0x73, 0x61, 0x6e,
	0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x77, 0x69, 0x74,
	0x68, 0x69, 0x6e, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x78, 0x2e, 0x73, 0x61,
	0x6e, 0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x2e, 0x54, 0x56, 0x53, 0x6e, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x22, 0x00, 0x32, 0xad, 0x02, 0x0a, 0x05, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12,
	0x44, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x22, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x78, 0x2e, 0x73, 0x61, 0x6e, 0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x2e, 0x53, 0x68,
	0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x21,
	0x2e, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e,
	0x78, 0x2e, 0x73, 0x61, 0x6e, 0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x2e, 0x53, 0x68, 0x6f,
	0x77, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x07, 0x55,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x21, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x2e,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x78, 0x2e, 0x73, 0x61, 0x6e, 0x67, 0x75, 0x69,
	0x73, 0x75, 0x67, 0x61, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e,
	0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x78, 0x2e, 0x73, 0x61, 0x6e, 0x67, 0x75,
	0x69, 0x73, 0x75, 0x67, 0x61, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x2e,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x61, 0x6e, 0x67, 0x75, 0x69, 0x73, 0x75, 0x67, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sanguisuga_proto_rawDescOnce sync.Once
	file_sanguisuga_proto_rawDescData = file_sanguisuga_proto_rawDesc
)

func file_sanguisuga_proto_rawDescGZIP() []byte {
	file_sanguisuga_proto_rawDescOnce.Do(func() {
		file_sanguisuga_proto_rawDescData = protoimpl.X.CompressGZIP(file_sanguisuga_proto_rawDescData)
	})
	return file_sanguisuga_proto_rawDescData
}

var file_sanguisuga_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sanguisuga_proto_goTypes = []any{
	(*Show)(nil),          // 0: within.website.x.sanguisuga.Show
	(*Shows)(nil),         // 1: within.website.x.sanguisuga.Shows
	(*TVSnatch)(nil),      // 2: within.website.x.sanguisuga.TVSnatch
	(*TVSnatches)(nil),    // 3: within.website.x.sanguisuga.TVSnatches
	(*AnimeSnatch)(nil),   // 4: within.website.x.sanguisuga.AnimeSnatch
	(*AnimeSnatches)(nil), // 5: within.website.x.sanguisuga.AnimeSnatches
	(*emptypb.Empty)(nil), // 6: google.protobuf.Empty
}
var file_sanguisuga_proto_depIdxs = []int32{
	0,  // 0: within.website.x.sanguisuga.Shows.shows:type_name -> within.website.x.sanguisuga.Show
	2,  // 1: within.website.x.sanguisuga.TVSnatches.snatches:type_name -> within.website.x.sanguisuga.TVSnatch
	4,  // 2: within.website.x.sanguisuga.AnimeSnatches.snatches:type_name -> within.website.x.sanguisuga.AnimeSnatch
	6,  // 3: within.website.x.sanguisuga.TV.List:input_type -> google.protobuf.Empty
	0,  // 4: within.website.x.sanguisuga.TV.Track:input_type -> within.website.x.sanguisuga.Show
	0,  // 5: within.website.x.sanguisuga.TV.Untrack:input_type -> within.website.x.sanguisuga.Show
	6,  // 6: within.website.x.sanguisuga.TV.Snatches:input_type -> google.protobuf.Empty
	6,  // 7: within.website.x.sanguisuga.Anime.List:input_type -> google.protobuf.Empty
	0,  // 8: within.website.x.sanguisuga.Anime.Track:input_type -> within.website.x.sanguisuga.Show
	0,  // 9: within.website.x.sanguisuga.Anime.Untrack:input_type -> within.website.x.sanguisuga.Show
	6,  // 10: within.website.x.sanguisuga.Anime.Snatches:input_type -> google.protobuf.Empty
	1,  // 11: within.website.x.sanguisuga.TV.List:output_type -> within.website.x.sanguisuga.Shows
	6,  // 12: within.website.x.sanguisuga.TV.Track:output_type -> google.protobuf.Empty
	6,  // 13: within.website.x.sanguisuga.TV.Untrack:output_type -> google.protobuf.Empty
	3,  // 14: within.website.x.sanguisuga.TV.Snatches:output_type -> within.website.x.sanguisuga.TVSnatches
	1,  // 15: within.website.x.sanguisuga.Anime.List:output_type -> within.website.x.sanguisuga.Shows
	6,  // 16: within.website.x.sanguisuga.Anime.Track:output_type -> google.protobuf.Empty
	6,  // 17: within.website.x.sanguisuga.Anime.Untrack:output_type -> google.protobuf.Empty
	5,  // 18: within.website.x.sanguisuga.Anime.Snatches:output_type -> within.website.x.sanguisuga.AnimeSnatches
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_sanguisuga_proto_init() }
func file_sanguisuga_proto_init() {
	if File_sanguisuga_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sanguisuga_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Show); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguisuga_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Shows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguisuga_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TVSnatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguisuga_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TVSnatches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguisuga_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeSnatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanguisuga_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeSnatches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sanguisuga_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_sanguisuga_proto_goTypes,
		DependencyIndexes: file_sanguisuga_proto_depIdxs,
		MessageInfos:      file_sanguisuga_proto_msgTypes,
	}.Build()
	File_sanguisuga_proto = out.File
	file_sanguisuga_proto_rawDesc = nil
	file_sanguisuga_proto_goTypes = nil
	file_sanguisuga_proto_depIdxs = nil
}
