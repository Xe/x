// Code generated by "stringer -type=DroneBLResponse"; DO NOT EDIT.

package dnsbl

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AllGood-0]
	_ = x[IRCDrone-3]
	_ = x[Bottler-5]
	_ = x[UnknownSpambotOrDrone-6]
	_ = x[DDOSDrone-7]
	_ = x[SOCKSProxy-8]
	_ = x[HTTPProxy-9]
	_ = x[ProxyChain-10]
	_ = x[OpenProxy-11]
	_ = x[OpenDNSResolver-12]
	_ = x[BruteForceAttackers-13]
	_ = x[OpenWingateProxy-14]
	_ = x[CompromisedRouter-15]
	_ = x[AutoRootingWorms-16]
	_ = x[AutoDetectedBotIP-17]
	_ = x[Unknown-255]
}

const (
	_DroneBLResponse_name_0 = "AllGood"
	_DroneBLResponse_name_1 = "IRCDrone"
	_DroneBLResponse_name_2 = "BottlerUnknownSpambotOrDroneDDOSDroneSOCKSProxyHTTPProxyProxyChainOpenProxyOpenDNSResolverBruteForceAttackersOpenWingateProxyCompromisedRouterAutoRootingWormsAutoDetectedBotIP"
	_DroneBLResponse_name_3 = "Unknown"
)

var (
	_DroneBLResponse_index_2 = [...]uint8{0, 7, 28, 37, 47, 56, 66, 75, 90, 109, 125, 142, 158, 175}
)

func (i DroneBLResponse) String() string {
	switch {
	case i == 0:
		return _DroneBLResponse_name_0
	case i == 3:
		return _DroneBLResponse_name_1
	case 5 <= i && i <= 17:
		i -= 5
		return _DroneBLResponse_name_2[_DroneBLResponse_index_2[i]:_DroneBLResponse_index_2[i+1]]
	case i == 255:
		return _DroneBLResponse_name_3
	default:
		return "DroneBLResponse(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
