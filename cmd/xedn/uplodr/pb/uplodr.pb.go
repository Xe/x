// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: uplodr.proto

package pb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Folder        string                 `protobuf:"bytes,3,opt,name=folder,proto3" json:"folder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadReq) Reset() {
	*x = UploadReq{}
	mi := &file_uplodr_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReq) ProtoMessage() {}

func (x *UploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_uplodr_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReq.ProtoReflect.Descriptor instead.
func (*UploadReq) Descriptor() ([]byte, []int) {
	return file_uplodr_proto_rawDescGZIP(), []int{0}
}

func (x *UploadReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadReq) GetFolder() string {
	if x != nil {
		return x.Folder
	}
	return ""
}

type UploadResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Variants      []*Variant             `protobuf:"bytes,1,rep,name=variants,proto3" json:"variants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResp) Reset() {
	*x = UploadResp{}
	mi := &file_uplodr_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResp) ProtoMessage() {}

func (x *UploadResp) ProtoReflect() protoreflect.Message {
	mi := &file_uplodr_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResp.ProtoReflect.Descriptor instead.
func (*UploadResp) Descriptor() ([]byte, []int) {
	return file_uplodr_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResp) GetVariants() []*Variant {
	if x != nil {
		return x.Variants
	}
	return nil
}

type Variant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	MimeType      string                 `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Variant) Reset() {
	*x = Variant{}
	mi := &file_uplodr_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Variant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variant) ProtoMessage() {}

func (x *Variant) ProtoReflect() protoreflect.Message {
	mi := &file_uplodr_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variant.ProtoReflect.Descriptor instead.
func (*Variant) Descriptor() ([]byte, []int) {
	return file_uplodr_proto_rawDescGZIP(), []int{2}
}

func (x *Variant) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Variant) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

type Echo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonce         string                 `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Echo) Reset() {
	*x = Echo{}
	mi := &file_uplodr_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Echo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Echo) ProtoMessage() {}

func (x *Echo) ProtoReflect() protoreflect.Message {
	mi := &file_uplodr_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Echo.ProtoReflect.Descriptor instead.
func (*Echo) Descriptor() ([]byte, []int) {
	return file_uplodr_proto_rawDescGZIP(), []int{3}
}

func (x *Echo) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

var File_uplodr_proto protoreflect.FileDescriptor

const file_uplodr_proto_rawDesc = "" +
	"\n" +
	"\fuplodr.proto\x12\x1cwithin.website.x.xedn.uplodr\"T\n" +
	"\tUploadReq\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x16\n" +
	"\x06folder\x18\x03 \x01(\tR\x06folder\"O\n" +
	"\n" +
	"UploadResp\x12A\n" +
	"\bvariants\x18\x01 \x03(\v2%.within.website.x.xedn.uplodr.VariantR\bvariants\"8\n" +
	"\aVariant\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1b\n" +
	"\tmime_type\x18\x02 \x01(\tR\bmimeType\"\x1c\n" +
	"\x04Echo\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\tR\x05nonce2\xb4\x01\n" +
	"\x05Image\x12N\n" +
	"\x04Ping\x12\".within.website.x.xedn.uplodr.Echo\x1a\".within.website.x.xedn.uplodr.Echo\x12[\n" +
	"\x06Upload\x12'.within.website.x.xedn.uplodr.UploadReq\x1a(.within.website.x.xedn.uplodr.UploadRespB%Z#within.website/x/cmd/xedn/uplodr/pbb\x06proto3"

var (
	file_uplodr_proto_rawDescOnce sync.Once
	file_uplodr_proto_rawDescData []byte
)

func file_uplodr_proto_rawDescGZIP() []byte {
	file_uplodr_proto_rawDescOnce.Do(func() {
		file_uplodr_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_uplodr_proto_rawDesc), len(file_uplodr_proto_rawDesc)))
	})
	return file_uplodr_proto_rawDescData
}

var file_uplodr_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_uplodr_proto_goTypes = []any{
	(*UploadReq)(nil),  // 0: within.website.x.xedn.uplodr.UploadReq
	(*UploadResp)(nil), // 1: within.website.x.xedn.uplodr.UploadResp
	(*Variant)(nil),    // 2: within.website.x.xedn.uplodr.Variant
	(*Echo)(nil),       // 3: within.website.x.xedn.uplodr.Echo
}
var file_uplodr_proto_depIdxs = []int32{
	2, // 0: within.website.x.xedn.uplodr.UploadResp.variants:type_name -> within.website.x.xedn.uplodr.Variant
	3, // 1: within.website.x.xedn.uplodr.Image.Ping:input_type -> within.website.x.xedn.uplodr.Echo
	0, // 2: within.website.x.xedn.uplodr.Image.Upload:input_type -> within.website.x.xedn.uplodr.UploadReq
	3, // 3: within.website.x.xedn.uplodr.Image.Ping:output_type -> within.website.x.xedn.uplodr.Echo
	1, // 4: within.website.x.xedn.uplodr.Image.Upload:output_type -> within.website.x.xedn.uplodr.UploadResp
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_uplodr_proto_init() }
func file_uplodr_proto_init() {
	if File_uplodr_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_uplodr_proto_rawDesc), len(file_uplodr_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uplodr_proto_goTypes,
		DependencyIndexes: file_uplodr_proto_depIdxs,
		MessageInfos:      file_uplodr_proto_msgTypes,
	}.Build()
	File_uplodr_proto = out.File
	file_uplodr_proto_goTypes = nil
	file_uplodr_proto_depIdxs = nil
}
