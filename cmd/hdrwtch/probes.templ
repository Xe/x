package main

import (
	"fmt"
	"time"
)

templ probeListPage(probes []Probe) {
	<div id="parent">
		<div class="mt-8 flow-root">
			<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
				<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
					<table class="min-w-full divide-y divide-gray-300">
						<thead>
							<tr>
								<th
									scope="col"
									class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-0"
								>Name</th>
								<th
									scope="col"
									class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900"
								>URL</th>
								<th
									scope="col"
									class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900"
								>Last Result</th>
								<th
									scope="col"
									class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900"
								></th>
							</tr>
						</thead>
						<tbody
							class="divide-y divide-gray-200"
							hx-target="closest tr"
							hx-swap="outerHTML"
						>
							for _, probe := range probes {
								@probeRow(probe)
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
		@probeCreateForm()
	</div>
}

templ probeCreateForm() {
	<form hx-post="/probe" hx-target="#parent">
		<div class="space-y-12">
			<div class="pb-12">
				<h2 class="text-base font-semibold leading-7 text-gray-900">Create new probe</h2>
				<p class="mt-1 text-sm leading-6 text-gray-600">This will count towards your probe limit.</p>
				<div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
					<div class="sm:col-span-4">
						<label for="username" class="block text-sm font-medium leading-6 text-gray-900">Name <span class="text-xs">(used in notifications)</span></label>
						<div class="mt-2">
							<div
								class="flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md"
							>
								<input
									type="text"
									name="name"
									class="block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6"
									placeholder="Bus schedule data"
								/>
							</div>
						</div>
					</div>
					<div class="sm:col-span-4">
						<label for="username" class="block text-sm font-medium leading-6 text-gray-900">URL to monitor</label>
						<div class="mt-2">
							<div
								class="flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md"
							>
								<input
									type="text"
									name="url"
									class="block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6"
									placeholder="https://google.com"
								/>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<button
			type="submit"
			class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
		>
			Submit
		</button>
	</form>
}

templ probeRow(probe Probe) {
	<tr>
		<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-0"><a href={ templ.SafeURL(fmt.Sprintf("/probe/%d", probe.ID)) }>{ probe.Name }</a></td>
		<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><code>{ probe.URL }</code></td>
		if probe.LastResult.CreatedAt.IsZero() {
			<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">Not run yet</td>
		} else {
			<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><a href={ templ.SafeURL(fmt.Sprintf("/probe/%d/run/%d", probe.ID, probe.LastResult.ID)) }>{ probe.LastResult.CreatedAt.Format(time.RFC3339) }</a></td>
		}
		<td>
			<button
				class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2"
				hx-get={ fmt.Sprintf("/probe/%d/edit", probe.ID) }
				hx-trigger="edit"
				onClick="let editing = document.querySelector('.editing')
                         if(editing) {
                           Swal.fire({title: 'Already Editing',
                                      showCancelButton: true,
                                      confirmButtonText: 'Yep, Edit This Row!',
                                      text:'Hey!  You are already editing a row!  Do you want to cancel that edit and continue?'})
                           .then((result) => {
                                if(result.isConfirmed) {
                                   htmx.trigger(editing, 'cancel')
                                   htmx.trigger(this, 'edit')
                                }
                            })
                         } else {
                            htmx.trigger(this, 'edit')
                         }"
			>
				Edit
			</button>
		</td>
	</tr>
}

templ probeEdit(probe Probe) {
	<tr hx-trigger="cancel" class="editing" hx-get={ fmt.Sprintf("/probe/%d", probe.ID) }>
		<td><input name="name" value={ probe.Name }/></td>
		<td><input name="url" value={ probe.URL }/></td>
		<td>
			<button
				class="focus:outline-none text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2"
				hx-get={ fmt.Sprintf("/probe/%d", probe.ID) }
			>
				Cancel
			</button>
			<button
				class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2"
				hx-put={ fmt.Sprintf("/probe/%d", probe.ID) }
				hx-include="closest tr"
			>
				Save
			</button>
		</td>
	</tr>
}

templ probePage(probe Probe, history []ProbeResult) {
	<div class="px-4 sm:px-6 lg:px-8">
		<div class="mt-8 flow-root">
			<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
				<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
					<table class="min-w-full divide-y divide-gray-300">
						<tbody>
							<tr>
								<td
									class="whitespace-nowrap py-2 pl-4 pr-3 font-medium text-gray-900 sm:pl-0"
								>
									Name
								</td>
								<td
									class="whitespace-nowrap py-2 pl-4 pr-3 text-gray-900 sm:pl-0"
								>
									{ probe.Name }
								</td>
							</tr>
							<tr>
								<td
									class="whitespace-nowrap py-2 pl-4 pr-3 font-medium text-gray-900 sm:pl-0"
								>
									Created At
								</td>
								<td
									class="whitespace-nowrap py-2 pl-4 pr-3 text-gray-900 sm:pl-0"
								>
									{ probe.CreatedAt.Format(time.RFC3339) }
								</td>
							</tr>
							<tr>
								<td
									class="whitespace-nowrap py-2 pl-4 pr-3 font-medium text-gray-900 sm:pl-0"
								>
									URL
								</td>
								<td
									class="whitespace-nowrap py-2 pl-4 pr-3 text-gray-900 sm:pl-0"
								>
									<code>{ probe.URL }</code>
								</td>
							</tr>
							if probe.LastResultID != 0 {
								<tr>
									<td
										class="whitespace-nowrap py-2 pl-4 pr-3 font-medium text-gray-900 sm:pl-0"
									>
										Last result at
									</td>
									<td
										class="whitespace-nowrap py-2 pl-4 pr-3 text-gray-900 sm:pl-0"
									>
										{ probe.LastResult.CreatedAt.Format(time.RFC3339) }
									</td>
								</tr>
								<tr>
									<td
										class="whitespace-nowrap py-2 pl-4 pr-3 font-medium text-gray-900 sm:pl-0"
									>
										Last result contents
									</td>
									<td
										class="whitespace-nowrap py-2 pl-4 pr-3 text-gray-900 sm:pl-0"
									>
										<code>{ probe.LastResult.LastModified }</code>
									</td>
								</tr>
							} else {
								<tr>
									<td
										class="whitespace-nowrap py-2 pl-4 pr-3 font-medium text-gray-900 sm:pl-0"
									>
										Last result at
									</td>
									<td
										class="whitespace-nowrap py-2 pl-4 pr-3 text-gray-900 sm:pl-0"
									>
										Probe has not been run yet
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
	<div class="px-4 py-8 sm:px-6 lg:px-8">
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h2 class="text-base font-semibold leading-6 text-gray-900">Run history</h2>
				<p class="mt-2 text-sm text-gray-700">The most recent 15 runs of this probe.</p>
			</div>
		</div>
		if len(history) != 0 {
			<div class="mt-8 flow-root">
				<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
					<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
						<table class="min-w-full divide-y divide-gray-300">
							<thead>
								<tr>
									<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-0">Time</th>
									<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Status code</th>
									<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Region</th>
									<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Last Modified</th>
								</tr>
							</thead>
							<tbody class="divide-y divide-gray-200">
								for _, check := range history {
									<tr>
										<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-0">{ check.CreatedAt.Format(time.RFC3339) }</td>
										<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{ fmt.Sprint(check.StatusCode) }</td>
										<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{ check.Region }</td>
										<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{ check.LastModified }</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		} else {
			<p class="mt-8 flow-root">This probe has not been run yet, wait 15 minutes or so for it to be run.</p>
		}
	</div>
}
