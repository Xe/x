// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: scheduling.proto

package scheduling

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConversationMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversationMember) Reset() {
	*x = ConversationMember{}
	mi := &file_scheduling_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMember) ProtoMessage() {}

func (x *ConversationMember) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMember.ProtoReflect.Descriptor instead.
func (*ConversationMember) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{0}
}

func (x *ConversationMember) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ConversationMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConversationMember) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ParseReq struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Month               string                 `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	ConversationMembers []*ConversationMember  `protobuf:"bytes,2,rep,name=conversation_members,json=conversationMembers,proto3" json:"conversation_members,omitempty"`
	Message             string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Date                string                 `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ParseReq) Reset() {
	*x = ParseReq{}
	mi := &file_scheduling_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseReq) ProtoMessage() {}

func (x *ParseReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseReq.ProtoReflect.Descriptor instead.
func (*ParseReq) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{1}
}

func (x *ParseReq) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *ParseReq) GetConversationMembers() []*ConversationMember {
	if x != nil {
		return x.ConversationMembers
	}
	return nil
}

func (x *ParseReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ParseReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ParseResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration      string                 `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Summary       string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Attendees     []*ConversationMember  `protobuf:"bytes,4,rep,name=attendees,proto3" json:"attendees,omitempty"`
	Location      string                 `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseResp) Reset() {
	*x = ParseResp{}
	mi := &file_scheduling_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseResp) ProtoMessage() {}

func (x *ParseResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseResp.ProtoReflect.Descriptor instead.
func (*ParseResp) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{2}
}

func (x *ParseResp) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ParseResp) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *ParseResp) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ParseResp) GetAttendees() []*ConversationMember {
	if x != nil {
		return x.Attendees
	}
	return nil
}

func (x *ParseResp) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

var File_scheduling_proto protoreflect.FileDescriptor

const file_scheduling_proto_rawDesc = "" +
	"\n" +
	"\x10scheduling.proto\x12 within.website.x.mimi.scheduling\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"R\n" +
	"\x12ConversationMember\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\"\xb7\x01\n" +
	"\bParseReq\x12\x14\n" +
	"\x05month\x18\x01 \x01(\tR\x05month\x12g\n" +
	"\x14conversation_members\x18\x02 \x03(\v24.within.website.x.mimi.scheduling.ConversationMemberR\x13conversationMembers\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x12\n" +
	"\x04date\x18\x04 \x01(\tR\x04date\"\xd0\x01\n" +
	"\tParseResp\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\tR\tstartTime\x12\x1a\n" +
	"\bduration\x18\x02 \x01(\tR\bduration\x12\x18\n" +
	"\asummary\x18\x03 \x01(\tR\asummary\x12R\n" +
	"\tattendees\x18\x04 \x03(\v24.within.website.x.mimi.scheduling.ConversationMemberR\tattendees\x12\x1a\n" +
	"\blocation\x18\x05 \x01(\tR\blocation2s\n" +
	"\n" +
	"Scheduling\x12e\n" +
	"\n" +
	"ParseEmail\x12*.within.website.x.mimi.scheduling.ParseReq\x1a+.within.website.x.mimi.scheduling.ParseRespB.Z,within.website/x/cmd/mimi/modules/schedulingb\x06proto3"

var (
	file_scheduling_proto_rawDescOnce sync.Once
	file_scheduling_proto_rawDescData []byte
)

func file_scheduling_proto_rawDescGZIP() []byte {
	file_scheduling_proto_rawDescOnce.Do(func() {
		file_scheduling_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scheduling_proto_rawDesc), len(file_scheduling_proto_rawDesc)))
	})
	return file_scheduling_proto_rawDescData
}

var file_scheduling_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_scheduling_proto_goTypes = []any{
	(*ConversationMember)(nil), // 0: within.website.x.mimi.scheduling.ConversationMember
	(*ParseReq)(nil),           // 1: within.website.x.mimi.scheduling.ParseReq
	(*ParseResp)(nil),          // 2: within.website.x.mimi.scheduling.ParseResp
}
var file_scheduling_proto_depIdxs = []int32{
	0, // 0: within.website.x.mimi.scheduling.ParseReq.conversation_members:type_name -> within.website.x.mimi.scheduling.ConversationMember
	0, // 1: within.website.x.mimi.scheduling.ParseResp.attendees:type_name -> within.website.x.mimi.scheduling.ConversationMember
	1, // 2: within.website.x.mimi.scheduling.Scheduling.ParseEmail:input_type -> within.website.x.mimi.scheduling.ParseReq
	2, // 3: within.website.x.mimi.scheduling.Scheduling.ParseEmail:output_type -> within.website.x.mimi.scheduling.ParseResp
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_scheduling_proto_init() }
func file_scheduling_proto_init() {
	if File_scheduling_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scheduling_proto_rawDesc), len(file_scheduling_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scheduling_proto_goTypes,
		DependencyIndexes: file_scheduling_proto_depIdxs,
		MessageInfos:      file_scheduling_proto_msgTypes,
	}.Build()
	File_scheduling_proto = out.File
	file_scheduling_proto_goTypes = nil
	file_scheduling_proto_depIdxs = nil
}
